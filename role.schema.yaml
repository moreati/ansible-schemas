%YAML 1.2
---
$schema: "http://json-schema.org/draft-07/schema#"
$id: "https://ansible.com/schema/role.schema"
$title: Role
examples:
  - frob
  - name: frob
    when: sunny
references:
  role_ref:
  type: object
  properties:
    any_errors_fatal:
      description:
        Force any un-handled task errors on any host to propagate to all hosts and end the play.
    become:
      description:
        Boolean that controls if privilege escalation is used or not on Task execution.
    become_exe:
      description:
        UNDOCUMENTED!!
    become_flags:
      description:
        A string of flag(s) to pass to the privilege escalation program when become is True.
    become_method:
      description:
        Which method of privilege escalation to use (such as sudo or su).
    become_user:
      description:
        User that you ‘become’ after using privilege escalation. The remote/login user must have permissions to become this user.
    check_mode:
      description:
        A boolean that controls if a task is executed in ‘check’ mode
        See also
        Check Mode (“Dry Run”)
    collections:
      description:
        UNDOCUMENTED!!
    connection:
      description:
        Allows you to change the connection plugin used for tasks to execute on the target.
        See also
        Using connection plugins
    debugger:
      description:
        Enable debugging tasks based on state of the task result. See Playbook Debugger
    delegate_facts:
      type: boolean
      description:
        Boolean that allows you to apply facts to a delegated host instead of inventory_hostname.
    delegate_to:
      type: string
      description:
        Host to execute task instead of the target (inventory_hostname). Connection vars from the delegated host will also be used for the task.
    diff:
      description:
        Toggle to make tasks return ‘diff’ information or not.
    environment:
      description:
        A dictionary that gets converted into environment vars to be provided for the task upon execution. This cannot affect Ansible itself nor its configuration, it just sets the variables for the code responsible for executing the task.
    ignore_errors:
      description:
        Boolean that allows you to ignore task failures and continue with play. It does not affect connection errors.
    ignore_unreachable:
      description:
        Boolean that allows you to ignore unreachable hosts and continue with play. This does not affect other task errors (see ignore_errors) but is useful for groups of volatile/ephemeral hosts.
    module_defaults:
      description:
        Specifies default parameter values for modules.
    name:
      description:
        Identifier. Can be used for documentation, in or tasks/handlers.
    no_log:
      description:
        Boolean that controls information disclosure.
    port:
      description:
        Used to override the default port used in a connection.
    remote_user:
      description:
        User used to log into the target via the connection plugin.
    run_once:
      description:
        Boolean that will bypass the host loop, forcing the task to attempt to execute on the first host available and afterwards apply any results and facts to all active hosts in the same batch.
    tags:
      description:
        Tags applied to the task or included tasks, this allows selecting subsets of tasks from the command line.
    throttle:
      description:
        Limit number of concurrent task runs on task, block and playbook level. This is independent of the forks and serial settings, but cannot be set higher than those limits. For example, if forks is set to 10 and the throttle is set to 15, at most 10 hosts will be operated on in parallel.
    vars:
      description:
        Dictionary/map of variables
    when:
      type: boolean
      description:
        Conditional expression, determines if an iteration of a task is run or not.
