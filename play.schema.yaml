$schema: "http://json-schema.org/draft-07/schema#"
$id: "https://ansible.com/schema/play.schema"
$title: Play
examples:
  - name: Frob the noozles
    hosts: noozles:!neezles
    become: true
    roles:
      - frob
definitions:
  role_ref:
    oneOf:
      - type: string
      - type: object
        properties:
          name:
            type: string

type: object
properties:
  any_errors_fatal:
    type: boolean
    description:
      Force any un-handled task errors on any host to propagate to all hosts and end the play.
  become:
    type: boolean
    description:
      Boolean that controls if privilege escalation is used or not on Task execution.
  become_exe:
    type: str
  become_flags:
    type: string
    description:
      A string of flag(s) to pass to the privilege escalation program when become is True.
  become_method:
    type: string
    description:
      Which method of privilege escalation to use (such as sudo or su).
    examples:
      - sudo
      - su
  become_user:
    type: string
    description:
      User that you ‘become’ after using privilege escalation. The remote/login user must have permissions to become this user.
  check_mode:
    type: boolean
    description:
      A boolean that controls if a task is executed in ‘check’ mode
      See also
      Check Mode (“Dry Run”)
  collections:
    type: array
  connection:
    type: string
    examples:
      - ssh
      - local
    description:
      Allows you to change the connection plugin used for tasks to execute on the target.
  debugger:
    type: string
    enum:
      - always
      - never
      - on_failed
      - on_skipped
      - on_unreachable
    description:
      Enable debugging tasks based on state of the task result. See Playbook Debugger
  diff:
    type: boolean
    description:
      Toggle to make tasks return ‘diff’ information or not.
  environment:
    type: object
    description:
      A dictionary that gets converted into environment vars to be provided for the task upon execution. This cannot affect Ansible itself nor its configuration, it just sets the variables for the code responsible for executing the task.
  fact_path:
    type: string
    description:
      Set the fact path option for the fact gathering plugin controlled by gather_facts.
  force_handlers:
    type: boolean
    description:
      Will force notified handler execution for hosts even if they failed during the play. Will not trigger if the play itself fails.
  gather_facts:
    type: boolean
    description:
      A boolean that controls if the play will automatically run the ‘setup’ task to gather facts for the hosts.
  gather_subset:
    type: array
    items:
      type: string
    description:
      Allows you to pass subset options to the fact gathering plugin controlled by gather_facts.
  gather_timeout:
    type: number
    description:
      Allows you to set the timeout for the fact gathering plugin controlled by gather_facts.
  handlers:
    type: array
    items:
      type: object
    description:
      A section with tasks that are treated as handlers, these won’t get executed normally, only when notified after each section of tasks is complete. A handler’s listen field is not templatable.
  hosts:
    type: string
    description:
      A list of groups, hosts or host pattern that translates into a list of hosts that are the play’s target.
  ignore_errors:
    type: boolean
    description:
      Boolean that allows you to ignore task failures and continue with play. It does not affect connection errors.
  ignore_unreachable:
    type: boolean
    description:
      Boolean that allows you to ignore unreachable hosts and continue with play. This does not affect other task errors (see ignore_errors) but is useful for groups of volatile/ephemeral hosts.
  max_fail_percentage:
    type: number
    minimum: 0
    maximum: 100
    description:
      can be used to abort the run after a given percentage of hosts in the current batch has failed.
  module_defaults:
    description:
      Specifies default parameter values for modules.
  name:
    type: string
    description:
      Identifier. Can be used for documentation, in or tasks/handlers.
  no_log:
    type: boolean
    description:
      Boolean that controls information disclosure.
  order:
    type: string
    description:
      Controls the sorting of hosts as they are used for executing the play. Possible values are inventory (default), sorted, reverse_sorted, reverse_inventory and shuffle.
  port:
    type: integer
    minimum: 1
    description:
      Used to override the default port used in a connection.
  post_tasks:
    type: array
    items:
      type: object
    description:
      A list of tasks to execute after the tasks section.
  pre_tasks:
    type: array
    items:
      type: object
    description:
      A list of tasks to execute before roles.
  remote_user:
    type: string
    description:
      User used to log into the target via the connection plugin.
  roles:
    type: array
    items:
      $ref: "#/definitions/role_ref"
    description:
      List of roles to be imported into the play
  run_once:
    type: boolean
    description:
      Boolean that will bypass the host loop, forcing the task to attempt to execute on the first host available and afterwards apply any results and facts to all active hosts in the same batch.
  serial:
    type:
      - integer
      - string
      - array
    examples:
      - 4
      - 30%
    description:
      Explicitly define how Ansible batches the execution of the current play on the play’s target

      See also

      Rolling Update Batch Size
  strategy:
    type: string
    description:
      Allows you to choose the connection plugin to use for the play.
  tags:
    type:
      - string
      - array
    examples:
      - always
      - never
      - ntp
      - upgrade
    description:
      Tags applied to the task or included tasks, this allows selecting subsets of tasks from the command line.
  tasks:
    type: array
    description:
      Main list of tasks to execute in the play, they run after roles and before post_tasks.
  throttle:
    description:
      Limit number of concurrent task runs on task, block and playbook level. This is independent of the forks and serial settings, but cannot be set higher than those limits. For example, if forks is set to 10 and the throttle is set to 15, at most 10 hosts will be operated on in parallel.
  vars:
    type: object
    description:
      Dictionary/map of variables
  vars_files:
    type: array
    description:
      List of files that contain vars to include in the play.
  vars_prompt:
    type: array
    description:
      list of variables to prompt for.

patternProperties:
  ^with_\w+:
    type: string

required:
  - hosts

additionalProprties: false


#task:
# vim: set filetype=yaml: